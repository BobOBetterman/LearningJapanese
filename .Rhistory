?cars
head(cars)
name(cars)
names(cars)
tail(cars)
summary(cars)
plot(cars)
?plot
plot(x = cars$speed, y = cars$dist)
plot(cars$dist, cars$speed)
?plot
plot(x = cars$speed, y = cars$dist, xlab = "Speed")
plot(x = cars$speed, y = cars$dist, ylab = "Stopping Distance")
plot(x = cars$speed, y = cars$dist, xlab = "Speed", ylab = "Stopping Distance")
plot(cars, main = "My Plot")
?plot
plot(cars, sub = "My Plot Subtitle")
?par
plot(cars, col = 2)
plot(cars, xlim = c(10, 15))
?points
plot(cars, pch = 2)
library(mtcars)
mtcars
data(mtcars)
summary(mtcars)
?boxplot
boxplot(formula = mpg ~ cyl, data = mtcars)
hist(mtcars$mpg)
getwd()
list.dirs()
list.files()
dataset_url <- "http://s3.amazonaws.com/practice_assignment/diet_data.zip"
download.file(dataset_url, "diet_data.zip")
unzip("diet_data.zip", exdir = "diet_data")
list.files("diet_data")
andy <- read.csv("diet_data/Andy.csv")
head(andy)
length(andy$Day)
dim(andy)
str(andy)
summary(andy)
names(andy)
andy[1, "Weight"]
andy[30, "Weight"]
andy[which(andy$Day == 30), "Weight"]
andy[which[, "Day"], "Weight"]
andy[which(andy[, "Day"] == 30), "Weight"]
?subset
subset(andy$Weight, andy$Day == 30)
andy_start <- andy[1, "Weight"]
andy_end <- andy[30, "Weight"]
andy_loss <- andy_start - andy_end
andy_loss
?list.files
files <- list.files("diet_data")
files
files[1]
files[2]
files[3:5]
head(read.csv(files[3]))
files_full <- list.files("diet_data", full.names = TRUE)
files_full
head(read.csv(files_full[3]))
andy_david <- rbind(andy, read.csv(files_full[2]))
head(andy_david)
tails(andy_david)
tail(andy_david)
day_25 <- andy_david[which(andy_david$Day == 25), ]
day_25
for(i in 1:5) {print(i)}
for(i in 1:5) {}
for(i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
dat <- data.frame
dat <- data.frame()
for(i in 1:5) {
dat <- rbind(dat, read.csv(files_full[i]))
}
str(dat)
for(i in 1:5){
dat2 <- data.frame()
dat2 <- rbind(dat2, read.csv(files_full[i]))
}
str(dat2)
head(dat2)
median(dat$Weight)
dat
?median
median(dat$Weight, na.rm = TRUE)
dat_30 <- dat[which(dat[, "Day"] == 30),]
dat_30
median(dat_30$Weight)
source('~/.active-rstudio-document', echo=TRUE)
weightmedian(directory = "diet_data", day = 20)
weightmedian("diet_data", 4)
weightmedian("diet_data", 17)
summary(files_full)
tmp <- vector(mode = "list", length = length(files_full))
summary(tmp)
for(i in seq_along(files_full)) {}
for(i in seq_along(files_full)) {
tmp[[i]] <- read.csv(files_full[[i]])
}
str(tmp)
str(lapply(files_full, read.csv))
str(tmp[[1]])
head(tmp[[1]][, "Day"])
output <- do.call(rbind, tmp)
str(output)
library(httr)
myapp = oauth_app("github", key="BobOBetterman")
myapp
a = 1
a
b = c(1, 2, 6)
b
dim(b, 2, 2)
b = dim(2)
b
b = c(1, 2, 6)
b <- dim(2)
b
?dim
b = c(1, 2, 6)
dim(b) = 2
b
dim(b) <- 2
dim(b) = 3
b
sig = sign_oauth1.0(myapp, token="4c3dee4326ab1f145ece", token_secret = "c6e132fb6b3be644ffb7ff92fee705f3f7199011")
req <- GET("https://api.github.com/users/jtleek/repos", sig)
q()
library(httr)
oauth_endpoints("github")
?oauth_endpoints
myapp <- oauth_app("github", key = "4c3dee4326ab1f145ece", secret = "c6e132fb6b3be644ffb7ff92fee705f3f7199011")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
library(httpuv)
installed.packages("httpuv")
install.packages("httpuv")
library(httr)
library(httpuv)
myapp <- oauth_app("github", key = "4c3dee4326ab1f145ece", secret = "c6e132fb6b3be644ffb7ff92fee705f3f7199011")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
myapp <- oauth_app("github", key = "4c3dee4326ab1f145ece", secret = "c6e132fb6b3be644ffb7ff92fee705f3f7199011")
github_token <- oauth2.0_token(oauth_endpoints("github"), myapp)
gtoken <- config(token = github_token)
req <- GET("https://api.github.com/users/jtleek/repos", gtoken)
names(req)
head(req)
head(req)
stop_for_status(req)
content(req)
names(req)
head(req)
names(req)
req$date
req$url
req$times
req$headers
req$request
str(req)
?GET
?content
json1 = content(req)
json1
head(names)
names(jjson1)
names(json1)
head(json1)
json1$created
json1$created_at
json1[[6]]
json1[[6]]$created_at
q()
?data.frame
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'UTF-8')
lang
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'ISO-2022-JP')
lang
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'ISO-8859-7')
lang
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'ISO-8859-2')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'ISO-8859-2')
lang
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'SHIFT-JIS')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'ASCII')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'UTF-16LE')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'SHIFT-JIS')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
lang
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'UTF-8')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'UTF-8')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R', encoding = 'UTF-8')
lang
あ
install.packages("Nippon")
library(swirl)
library(dplyr)
install.packages("dplyr")
swirl()
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
select(cran, -time)
-5:20
-(5:20)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(cran, size:ip_id)
cran2
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id)
)
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
swirl()
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
?group_by
by_package <- group_by(cran, package)
by_package
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantil(pack_sum$count, probs = 0.99)
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View()
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View(result3)
submit()
submit()
submit()
submit()
library(swirl)
swirl()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, col = sex_class, into = c("sex", "class"))
submit()
students3
submit()
?spread
submit()
submit()
submit()
extract_numeric("class5")
?mutate
submit()
?extract_numeric
?chain
?mutate
submit()
submit()
submit()
submit()
submit()
submit()
students4
submit()
submit()
submit()
passed
failed
passed <- mutate(passed, status = "passed")
failed <- mutate(failed, status = "failed")
bind_rows(passed, failed)
sat
submit()
submit()
library(swirl)
swirl()
Sys.getlocale("LC_TIME")
?Sys.setlocale
Sys.setlocale(category = "LC_ALL", locale = "en_US.UTF-8")
Sys.setlocale("LC_ALL", "C")
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
month(this_day)
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
minute(this_moment)
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
this_moment <- update(this_moment, hours = 15, minutes = 37)
this_moment
?now
nyc <- now(tzone = "America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tzone = "Singapore")
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval
how_long <- new_interval(last_time, arrive)
as.period(how_long)
stopwatch()
Sys.setlocale("LC_ALL", "C")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
Sys.setlocale("LC_ALL", "jpn")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
sessionInfo()
Sys.setenv(LANG = "jpn")
sessionInfo()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
print(k)
?Sys.setenv
Sys.setenv(LANG = "jp")
print(k)
Sys.setenv(LANG = jpn)
Sys.setenv(LANG = ""en_US.UTF-8"")
Sys.setenv(LANG = "en_US.UTF-8")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
print("あ")
あ <- 5
あ
print("あ")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
a
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
a
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
b
Sys.getlocale()
sessionInfo()
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
Sys.getlocale()
Sys.setlocale(category = "LC_ALL", locale = "jpn")
source('~/.active-rstudio-document', encoding = 'UTF-8', echo=TRUE)
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
df <- read.table("test.txt", stringsAsFactors = F)
df
df[1,1]
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
df <- "\U3042"
df
df <- data.frame(c("\U3042", a), stringsAsFactors = F)
df <- data.frame(c("\U3042", "a"), stringsAsFactors = F)
df
df[1,1]
write.table(df, "test.txt", row.names = F, col.names = F)
df2 <- read.table("test.txt", stringsAsFactors = F)
df2
df2[1,1]
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
df2 <- read.table("test.txt", stringsAsFactors = F, fileEncoding = "UTF-8")
df2
df2[1,1]
?iconv
iconv(df[1,1], from = "ASCII", to = "UTF-8")
iconv(df[1,1], from = "UTF-8", to = "ASCII")
iconv(df[1,1])
?Encoding
Encoding(df[1,1])
a <- parse(text = paste0("'", df[1,1], "'"))
b <- xPar[[1]]
b <- a[[1]]
b
a
write.table("\U3042", "test2.txt")
a <- "\U3042"
a
write.table(a, "test2.txt", row.names = F, col.names = F)
?writeLines
a
writeLines(a, "test.txt", useBytes = T)
writeLines(a, "test.txt", useBytes = T)
con <- file("test.txt", open = "a")
class(con)
writeLines(a, con, useBytes = T)
open(con = con)
writeLines(a, con, useBytes = T)
con <- file("test2.txt", open = "at")
writeLines(a, con = con, useBytes = T)
a
writeLines(a, con = con, useBytes = T)
close(con = con)
con <- file("test.txt", open = "a")
close(con)
fileCon <- file("testData.txt", open = "at")
open(fileCon)
writeLines(a, fileCon, useBytes = TRUE)
writeLines(a, fileCon, useBytes = TRUE)
writeLines(a, fileCon, useBytes = TRUE)
close(fileCon)
fileCon <- file("testData.txt", open = "at")
writeLines(a, fileCon, useBytes = TRUE)
writeLines(a, fileCon, useBytes = TRUE)
writeLines(a, fileCon, useBytes = TRUE)
close(fileCon)
?readLines
fileCon <- file("testData.txt", open = "at")
x <- readLines(fileCon)
close(fileCon)
fileRead <- file("testData.txt", open = "rt")
x <- readLines(fileCon)
x
x <- readLines(fileCon, encoding = "UTF-8")
x
close(fileRead)
?write
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
filetext <- readLines(con <- file("data/japDict.txt", encoding = "UCS-2LE"))
filetext
filetext <- readLines(con <- file("data/japDict.txt", encoding = "UTF-8"))
filetext
?file
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
japDict
length(japDict)
japDict[2]
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
source('C:/cygwin64/home/andrewHill/forFun/learnJapanese/learnJapanese.R')
